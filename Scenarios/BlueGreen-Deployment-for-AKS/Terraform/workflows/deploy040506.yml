name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUB_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_admin_password: ${{ secrets.ADMIN_PASSWORD }}
      TF_VAR_access_key: ${{ secrets.ACCESS_KEY }}
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.DEPLOYMENT_SP }}

    # Initialize the TF working directory.
    # Change the backend-config variables to match the storage account used for your deployments.
    - name: Terraform Init 04-Network-Hub
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/04-Network-Hub
      run: terraform init -backend-config="resource_group_name=$TFSTATE_RG" -backend-config="storage_account_name=$STORAGEACCOUNTNAME" -backend-config="container_name=$CONTAINERNAME"

    # Generates an execution plan for Terraform
    - name: Terraform Plan 04-Network-Hub
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/04-Network-Hub
      run: terraform plan

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply 04-Network-Hub
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/04-Network-Hub
      run: terraform apply -auto-approve

    # Change the backend-config variables to match the storage account used for your deployments.
    - name: Terraform Init 05-Network-LZ
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/05-Network-LZ
      run: terraform init -backend-config="resource_group_name=$TFSTATE_RG" -backend-config="storage_account_name=$STORAGEACCOUNTNAME" -backend-config="container_name=$CONTAINERNAME"


    - name: Terraform Plan 05-Network-LZ
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/05-Network-LZ
      run: terraform plan


    - name: Terraform Apply 05-Network-LZ
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/05-Network-LZ
      run: terraform apply -auto-approve

    # Change the backend-config variables to match the storage account used for your deployments.
    - name: Terraform Init 06-AKS-supporting
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/06-AKS-supporting
      run: terraform init -backend-config="resource_group_name=$TFSTATE_RG" -backend-config="storage_account_name=$STORAGEACCOUNTNAME" -backend-config="container_name=$CONTAINERNAME"


    - name: Terraform Plan 06-AKS-supporting
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/06-AKS-supporting
      run: terraform plan


    - name: Terraform Apply 06-AKS-supporting
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ./Scenarios/AKS-Secure-Baseline-PrivateCluster/Terraform/06-AKS-supporting
      run: terraform apply -auto-approve